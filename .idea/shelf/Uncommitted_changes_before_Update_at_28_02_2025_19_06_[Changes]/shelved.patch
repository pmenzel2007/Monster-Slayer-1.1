Index: game-files/player.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>class Player extends GameObject {\r\n    constructor(x, y) {\r\n        super(x, y, 32, 32);\r\n        this.speed = 3;\r\n        this.movement = { up: false, down: false, left: false, right: false };\r\n        this.attackDirection = { up: false, down: false, left: false, right: false };\r\n        this.attackSpeed = 15;\r\n        this.cooldown = 0;\r\n        this.bullets = [];\r\n\r\n        document.addEventListener(\"keydown\", (event) => this.handleInput(event, true));\r\n        document.addEventListener(\"keyup\", (event) => this.handleInput(event, false));\r\n    }\r\n\r\n    handleInput(event, down) {\r\n        switch (event.code) {\r\n            case \"KeyW\": this.movement.up = down; break;\r\n            case \"KeyS\": this.movement.down = down; break;\r\n            case \"KeyD\": this.movement.right = down; break;\r\n            case \"KeyA\": this.movement.left = down; break;\r\n        }\r\n\r\n        if ([\"ArrowUp\", \"ArrowDown\", \"ArrowRight\", \"ArrowLeft\"].includes(event.code)) {\r\n            this.changeAttackDirection(event, down);\r\n        }\r\n\r\n    }\r\n\r\n    changeAttackDirection(event, down) {\r\n        if (down) {\r\n            this.attackDirection = {\r\n                up: event.code === \"ArrowUp\",\r\n                down: event.code === \"ArrowDown\",\r\n                right: event.code === \"ArrowRight\",\r\n                left: event.code === \"ArrowLeft\"\r\n            };\r\n        } else {\r\n            this.attackDirection = {\r\n                up: false,\r\n                down: false,\r\n                right: false,\r\n                left: false\r\n            }\r\n        }\r\n\r\n        this.fireBullet();\r\n    }\r\n\r\n    fireBullet() {\r\n        if (this.cooldown === 0) {\r\n            let dx = 0, dy = 0;\r\n\r\n            if (this.attackDirection.up) dy -= 1;\r\n            if (this.attackDirection.down) dy += 1;\r\n            if (this.attackDirection.left) dx -= 1;\r\n            if (this.attackDirection.right) dx += 1;\r\n\r\n            if (dx !== 0 || dy !== 0) {\r\n                this.bullets.push(new Bullet(this.x + (this.width/2 - 4), this.y + (this.height/2 - 4), dx, dy));\r\n            }\r\n            this.cooldown = this.attackSpeed;\r\n        }\r\n    }\r\n\r\n    updatePlayer() {\r\n        let dx = 0, dy = 0;\r\n\r\n        if (this.movement.up) dy -= 1;\r\n        if (this.movement.down) dy += 1;\r\n        if (this.movement.left) dx -= 1;\r\n        if (this.movement.right) dx += 1;\r\n\r\n        if (dx !== 0 || dy !== 0) {\r\n            let distance = Math.sqrt(dx * dx + dy * dy);\r\n            dx /= distance;\r\n            dy /= distance;\r\n        }\r\n\r\n        this.x += dx * this.speed;\r\n        this.y += dy * this.speed;\r\n\r\n        if (this.cooldown > 0) {\r\n            this.cooldown--;\r\n        }\r\n        else if (\r\n            this.attackDirection.up ||\r\n            this.attackDirection.down ||\r\n            this.attackDirection.right ||\r\n            this.attackDirection.left) {\r\n            this.fireBullet();\r\n        }\r\n\r\n        return { playerX: this.x, playerY: this.y , bullets: this.bullets };\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/game-files/player.js b/game-files/player.js
--- a/game-files/player.js	(revision 2b3ce40c5e42bf4d6e702a65fb5210640fcb1316)
+++ b/game-files/player.js	(date 1740765448972)
@@ -2,8 +2,8 @@
     constructor(x, y) {
         super(x, y, 32, 32);
         this.speed = 3;
-        this.movement = { up: false, down: false, left: false, right: false };
-        this.attackDirection = { up: false, down: false, left: false, right: false };
+        this.movement = {up: false, down: false, left: false, right: false};
+        this.attackDirection = {up: false, down: false, left: false, right: false};
         this.attackSpeed = 15;
         this.cooldown = 0;
         this.bullets = [];
@@ -14,10 +14,18 @@
 
     handleInput(event, down) {
         switch (event.code) {
-            case "KeyW": this.movement.up = down; break;
-            case "KeyS": this.movement.down = down; break;
-            case "KeyD": this.movement.right = down; break;
-            case "KeyA": this.movement.left = down; break;
+            case "KeyW":
+                this.movement.up = down;
+                break;
+            case "KeyS":
+                this.movement.down = down;
+                break;
+            case "KeyD":
+                this.movement.right = down;
+                break;
+            case "KeyA":
+                this.movement.left = down;
+                break;
         }
 
         if (["ArrowUp", "ArrowDown", "ArrowRight", "ArrowLeft"].includes(event.code)) {
@@ -56,7 +64,7 @@
             if (this.attackDirection.right) dx += 1;
 
             if (dx !== 0 || dy !== 0) {
-                this.bullets.push(new Bullet(this.x + (this.width/2 - 4), this.y + (this.height/2 - 4), dx, dy));
+                this.bullets.push(new Bullet(this.x + (this.width / 2 - 4), this.y + (this.height / 2 - 4), dx, dy));
             }
             this.cooldown = this.attackSpeed;
         }
@@ -81,8 +89,7 @@
 
         if (this.cooldown > 0) {
             this.cooldown--;
-        }
-        else if (
+        } else if (
             this.attackDirection.up ||
             this.attackDirection.down ||
             this.attackDirection.right ||
@@ -90,6 +97,6 @@
             this.fireBullet();
         }
 
-        return { playerX: this.x, playerY: this.y , bullets: this.bullets };
+        return {playerX: this.x, playerY: this.y, bullets: this.bullets};
     }
 }
\ No newline at end of file
Index: game-files/core.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>let canvas;\r\nlet ctx;\r\nlet startTime;\r\nlet player;\r\nlet enemies = [];\r\nlet gates = [];\r\nlet currentGate = 0;\r\n\r\nlet time;\r\nlet seconds;\r\nlet minutes;\r\nlet currentSecond = 0;\r\n\r\nlet julian;\r\nlet playerSprite;\r\nlet bulletRight;\r\nlet bulletUp;\r\nlet bulletDown;\r\nlet bulletLeft;\r\n\r\n\r\nlet wall;\r\nlet walls;\r\n\r\nfunction onBodyLoad() {\r\n    startTime = performance.now();\r\n\r\n    canvas = document.getElementById(\"canvas\");\r\n    ctx = canvas.getContext(\"2d\");\r\n\r\n    player = new Player(canvas.width/2 - 16, canvas.height/2 - 16);\r\n\r\n    gates.push(new Gate(canvas.width/2-16, 0));\r\n    gates.push(new Gate(0,canvas.width/2-16));\r\n    gates.push(new Gate(canvas.width/2-16, canvas.height - 32));\r\n    gates.push(new Gate(canvas.width - 32,canvas.height/2-16));\r\n\r\n    initializeWalls();\r\n\r\n    loadSprites();\r\n\r\n    gameLoop();\r\n}\r\n\r\nfunction gameLoop() {\r\n    time = Math.floor(performance.now() - startTime);\r\n    seconds = Math.floor((time / 1000) % 60);\r\n    minutes = Math.floor((time / 1000) / 60);\r\n\r\n\r\n    document.getElementById(\"timer\").innerText =\r\n        `${minutes.toString().padStart(2, \"0\")}:${seconds.toString().padStart(2, \"0\")}`;\r\n\r\n\r\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\r\n\r\n    let playerParams = player.updatePlayer();\r\n    player.drawObjectImage(ctx, playerSprite);\r\n\r\n    for (let i = 0; i < enemies.length; i++) {\r\n        enemies[i].update(playerParams.playerX, playerParams.playerY, enemies);\r\n        enemies[i].draw(ctx, \"green\");\r\n    }\r\n\r\n    for (let bullet of playerParams.bullets) {\r\n        bullet.updateBullet();\r\n        bullet.drawObjectImage(ctx, bulletRight);\r\n        for (let enemy of enemies) {\r\n            if (bullet.collidesWith(enemy)) {\r\n                console.log(bullet, enemy);\r\n                enemies.splice(enemies.indexOf(enemy), 1);\r\n                playerParams.bullets.splice(playerParams.bullets.indexOf(bullet), 1);\r\n                break;\r\n            }\r\n        }\r\n    }\r\n\r\n    gates.forEach(gate => gate.draw(ctx, \"purple\"));\r\n\r\n    for (wall of walls) {\r\n        wall.draw(ctx, \"black\");\r\n    }\r\n    spawnEnemies();\r\n    requestAnimationFrame(gameLoop);\r\n}\r\n\r\nfunction initializeWalls() {\r\n    walls = [];\r\n    let wallX = 0;\r\n    let wallY = 0;\r\n\r\n    for (let i = 0; i < 17; i++) {\r\n        wallX = 32 * i;\r\n        if (i !== 8) {\r\n            walls.push(new Wall(wallX, 0));\r\n            walls.push(new Wall(wallX, canvas.height - 32));\r\n        }\r\n    }\r\n\r\n    for (let i = 0; i < 17; i++) {\r\n        wallY = 32 * i;\r\n        if (i !== 8) {\r\n            walls.push(new Wall(0, wallY));\r\n            walls.push(new Wall(canvas.height - 32, wallY));\r\n        }\r\n    }\r\n}\r\n\r\nfunction spawnEnemies() {\r\n\r\n    if (currentSecond === seconds) {\r\n        if (seconds <= 30) {\r\n            let enemyX = gates[currentGate].getX();\r\n            let enemyY = gates[currentGate].getY();\r\n            enemies.push(new Enemy(enemyX, enemyY));\r\n            if (currentGate !== 4) currentGate++;\r\n            if (currentGate === 4) currentGate = 0\r\n\r\n            currentSecond++;\r\n\r\n        }\r\n        if (seconds > 30) {\r\n            for (let gate of gates) {\r\n                let enemyX = gate.getX();\r\n                let enemyY = gate.getY();\r\n                enemies.push(new Enemy(enemyX, enemyY));\r\n            }\r\n\r\n            currentSecond += 3;\r\n        }\r\n\r\n        if (minutes >= 1) {\r\n            let spawnX = Math.random() * (canvas.width - 66) + 33;\r\n            let spawnY = Math.random() * (canvas.height - 66) + 33;\r\n            enemies.push(new Enemy(spawnX, spawnY));\r\n        }\r\n\r\n    }\r\n}\r\n\r\nfunction loadSprites() {\r\n    julian = document.getElementById(\"julian\");\r\n    playerSprite = document.getElementById(\"playerSprite\");\r\n\r\n}\r\n\r\nwindow.onBodyLoad = onBodyLoad;
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/game-files/core.js b/game-files/core.js
--- a/game-files/core.js	(revision 2b3ce40c5e42bf4d6e702a65fb5210640fcb1316)
+++ b/game-files/core.js	(date 1740762204847)
@@ -62,6 +62,8 @@
         enemies[i].draw(ctx, "green");
     }
 
+    player.updatePlayer(walls);
+
     for (let bullet of playerParams.bullets) {
         bullet.updateBullet();
         bullet.drawObjectImage(ctx, bulletRight);
Index: menu.html
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><!DOCTYPE html>\r\n<html lang=\"en\">\r\n<head>\r\n    <meta charset=\"UTF-8\">\r\n    <title></title>\r\n</head>\r\n<body>\r\n\r\n</body>\r\n</html>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/menu.html b/menu.html
--- a/menu.html	(revision 2b3ce40c5e42bf4d6e702a65fb5210640fcb1316)
+++ b/menu.html	(date 1740762958125)
@@ -2,9 +2,50 @@
 <html lang="en">
 <head>
     <meta charset="UTF-8">
-    <title></title>
+    <title>Game Menu</title>
+    <style>
+        body {
+            font-family: Arial, sans-serif;
+            background: url('sprites/pixelGrass.jpg');
+            background-size: cover;
+            display: flex;
+            justify-content: center;
+            text-align: center;
+        }
+        .menu {
+            text-align: center;
+        }
+        .menu button {
+            width: 200px;
+            margin: 10px;
+            padding: 15px;
+            font-size: 18px;
+            cursor: pointer;
+            background-color: #61dafb;
+            border-radius: 5px;
+            color: #282c34;
+        }
+    </style>
 </head>
 <body>
+<div class="menu">
+    <h1>Game Menu</h1>
+    <button onclick="startGame()">Start Game</button>
+    <button onclick="showCredits()">Credits</button>
+</div>
+
+<script>
+    function startGame() {
+        alert('Starting the game...');
+        window.location.href = 'game.html';
 
+    }
+
+    function showCredits() {
+        alert('Showing credits...');
+        window.location.href = 'credits.html';
+
+    }
+</script>
 </body>
 </html>
\ No newline at end of file
Index: credits.html
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/credits.html b/credits.html
new file mode 100644
--- /dev/null	(date 1740762969093)
+++ b/credits.html	(date 1740762969093)
@@ -0,0 +1,44 @@
+<!DOCTYPE html>
+<html lang="en">
+<head>
+  <meta charset="UTF-8">
+  <title>Game Credits</title>
+  <style>
+    body {
+      font-family: Arial, sans-serif;
+      background: url('sprites/pixelGrass.jpg');
+      background-size: cover;
+      display: flex;
+      justify-content: center;
+      align-items: center;
+      height: 100vh;
+      margin: 0;
+      text-align: center;
+    }
+    .credits {
+      max-width: 600px;
+    }
+    h1 {
+      margin-bottom: 20px;
+    }
+    p {
+      margin: 5px 0;
+    }
+  </style>
+</head>
+<body>
+<div class="credits">
+  <h1>Game Credits</h1>
+  <h2>Development Team</h2>
+  <p>Paul Mensel - Lead Developer</p>
+  <p>Dominic Magnarelli - Developer</p>
+  <p>Niklas Weithaler - Developer</p>
+  <p>Niklas Weithaler - Artist</p>
+
+
+  <h2>Testing</h2>
+  <p>QA Team</p>
+  <p>Beta Testers</p>
+</div>
+</body>
+</html>
\ No newline at end of file
