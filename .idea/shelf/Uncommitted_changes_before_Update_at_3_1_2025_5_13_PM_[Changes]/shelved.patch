Index: game-files/core.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>let canvas;\r\nlet ctx;\r\nlet startTime;\r\nlet player;\r\nlet enemies = [];\r\nlet gates = [];\r\nlet currentGate = 0;\r\n\r\nlet time;\r\nlet seconds;\r\nlet minutes;\r\nlet currentSecond = 0;\r\n\r\nlet julian;\r\nlet playerSpriteRight;\r\nlet playerSpriteLeft;\r\nlet bulletUp;\r\nlet bulletRight;\r\nlet bulletDown;\r\nlet bulletLeft;\r\nlet monsterEnemyLeft;\r\nlet monsterEnemyRight;\r\n\r\nlet gateUp;\r\nlet gateDown;\r\nlet gateLeft;\r\nlet gateRight;\r\n\r\nlet wall;\r\nlet walls;\r\n\r\nlet score = 0;\r\n\r\nfunction onBodyLoad() {\r\n    startTime = performance.now();\r\n\r\n    canvas = document.getElementById(\"canvas\");\r\n    ctx = canvas.getContext(\"2d\");\r\n    loadSprites();\r\n\r\n    console.log(gateUp);\r\n    gates.push(new Gate(canvas.width/2-16, 0, \"up\"));\r\n    gates.push(new Gate(0,canvas.width/2-16, \"left\"));\r\n    gates.push(new Gate(canvas.width/2-16, canvas.height - 32, \"down\"));\r\n    gates.push(new Gate(canvas.width - 32,canvas.height/2-16, \"right\"));\r\n\r\n    initializeWalls();\r\n\r\n    player = new Player(canvas.width/2 - 16, canvas.height/2 - 16, walls, gates);\r\n\r\n    gameLoop();\r\n}\r\n\r\nfunction gameLoop() {\r\n    time = Math.floor(performance.now() - startTime);\r\n    seconds = Math.floor((time / 1000) % 60);\r\n    minutes = Math.floor((time / 1000) / 60);\r\n\r\n\r\n    document.getElementById(\"timer\").innerText =\r\n        `${minutes.toString().padStart(2, \"0\")}:${seconds.toString().padStart(2, \"0\")}`;\r\n\r\n    document.getElementById(\"score\").innerText = `Score: ${score}`;\r\n\r\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\r\n\r\n    let playerParams = player.updatePlayer();\r\n    player.drawObjectImage(ctx);\r\n\r\n    for (let i = 0; i < enemies.length; i++) {\r\n        enemies[i].update(playerParams.playerX, playerParams.playerY, enemies);\r\n        enemies[i].drawObjectImage(ctx);\r\n    }\r\n\r\n    for (let bullet of playerParams.bullets) {\r\n        bullet.updateBullet();\r\n        bullet.drawObjectImage(ctx);\r\n        for (let enemy of enemies) {\r\n            if (bullet.collidesWith(enemy)) {\r\n                console.log(bullet, enemy);\r\n                enemies.splice(enemies.indexOf(enemy), 1);\r\n                playerParams.bullets.splice(playerParams.bullets.indexOf(bullet), 1);\r\n                score += 10 + 10 * minutes;\r\n                break;\r\n            }\r\n        }\r\n    }\r\n\r\n    gates.forEach(gate => gate.drawObjectImage(ctx));\r\n\r\n    for (wall of walls) {\r\n        wall.draw(ctx, \"black\");\r\n    }\r\n    spawnEnemies();\r\n    requestAnimationFrame(gameLoop);\r\n}\r\n\r\nfunction initializeWalls() {\r\n    walls = [];\r\n    let wallX = 0;\r\n    let wallY = 0;\r\n\r\n    for (let i = 0; i < 17; i++) {\r\n        wallX = 32 * i;\r\n        if (i !== 8) {\r\n            walls.push(new Wall(wallX, 0));\r\n            walls.push(new Wall(wallX, canvas.height - 32));\r\n        }\r\n    }\r\n\r\n    for (let i = 0; i < 17; i++) {\r\n        wallY = 32 * i;\r\n        if (i !== 8) {\r\n            walls.push(new Wall(0, wallY));\r\n            walls.push(new Wall(canvas.height - 32, wallY));\r\n        }\r\n    }\r\n}\r\n\r\nfunction spawnEnemies() {\r\n\r\n    console.log(seconds);\r\n    if (currentSecond === seconds + minutes * 60) {\r\n        if (seconds <= 30) {\r\n            let enemyX = gates[currentGate].getX();\r\n            let enemyY = gates[currentGate].getY();\r\n            enemies.push(new Enemy(enemyX, enemyY));\r\n            if (currentGate !== 4) currentGate++;\r\n            if (currentGate === 4) currentGate = 0\r\n\r\n            currentSecond++;\r\n\r\n        }\r\n        if (seconds + minutes * 60 > 30) {\r\n            for (let gate of gates) {\r\n                let enemyX = gate.getX();\r\n                let enemyY = gate.getY();\r\n                enemies.push(new Enemy(enemyX, enemyY));\r\n            }\r\n\r\n            currentSecond += 3;\r\n        }\r\n\r\n        if (minutes >= 1) {\r\n            let spawnX = Math.random() * (canvas.width - 66) + 33;\r\n            let spawnY = Math.random() * (canvas.height - 66) + 33;\r\n            enemies.push(new Enemy(spawnX, spawnY));\r\n        }\r\n\r\n    }\r\n}\r\n\r\nfunction loadSprites() {\r\n    julian = document.getElementById(\"julian\");\r\n    playerSpriteRight = document.getElementById(\"playerSpriteRight\");\r\n    playerSpriteLeft = document.getElementById(\"playerSpriteLeft\");\r\n\r\n}\r\n\r\nwindow.onBodyLoad = onBodyLoad;
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/game-files/core.js b/game-files/core.js
--- a/game-files/core.js	(revision bc989bf85949c75821298a3f3fbdcecf824626b8)
+++ b/game-files/core.js	(date 1740845518006)
@@ -31,6 +31,8 @@
 
 let score = 0;
 
+let alive = true;
+
 function onBodyLoad() {
     startTime = performance.now();
 
@@ -92,7 +94,24 @@
         wall.draw(ctx, "black");
     }
     spawnEnemies();
-    requestAnimationFrame(gameLoop);
+    if (alive) requestAnimationFrame(gameLoop);
+    else finishGame();
+}
+
+function finishGame() {
+    document.getElementById("gameOverPopup").style.display = "block";
+}
+
+function restartGame() {
+    document.getElementById("gameOverPopup").style.display = "none";
+    startTime = performance.now();
+    score = 0;
+    alive = true;
+    enemies = [];
+    player = new Player(canvas.width/2 - 16, canvas.height/2 - 16, walls, gates);
+    currentGate = 0;
+    currentSecond = 0;
+    gameLoop();
 }
 
 function initializeWalls() {
@@ -118,8 +137,6 @@
 }
 
 function spawnEnemies() {
-
-    console.log(seconds);
     if (currentSecond === seconds + minutes * 60) {
         if (seconds <= 30) {
             let enemyX = gates[currentGate].getX();
Index: game.html
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><!DOCTYPE html>\r\n<html lang=\"en\">\r\n<head>\r\n    <meta charset=\"UTF-8\">\r\n    <title>Monster Slayer</title>\r\n    <style>\r\n        body {\r\n            text-align: center;\r\n            margin: 0;\r\n            position: relative;\r\n            background-color: #111;\r\n        }\r\n\r\n        canvas {\r\n            background: url(\"sprites/grass.png\");\r\n            background-size: cover;\r\n            margin: auto;\r\n        }\r\n\r\n        .back-button {\r\n            position: absolute;\r\n            top: 10px;\r\n            left: 10px;\r\n            background-color: black;\r\n            color: limegreen;\r\n            padding: 10px 20px;\r\n            font-size: 16px;\r\n        }\r\n\r\n        .back-button:hover {\r\n            background-color: limegreen;\r\n            color: black;\r\n        }\r\n\r\n        #timer, #score {\r\n            position: absolute;\r\n            font-size: 28px;\r\n            font-weight: bold;\r\n            color: limegreen;\r\n            right: 10px;\r\n        }\r\n\r\n        #timer {\r\n            top: 10px;\r\n        }\r\n\r\n        #score {\r\n            top: 50px;\r\n        }\r\n    </style>\r\n    <script src=\"game-files/gameObject.js\"></script>\r\n    <script src=\"game-files/player.js\"></script>\r\n    <script src=\"game-files/bullet.js\"></script>\r\n    <script src=\"game-files/enemy.js\"></script>\r\n    <script src=\"game-files/gates.js\"></script>\r\n    <script src=\"game-files/wall.js\"></script>\r\n    <script src=\"game-files/core.js\"></script>\r\n</head>\r\n<body onLoad=\"onBodyLoad()\">\r\n<button class=\"back-button\" onclick=\"goToMenu()\">‚Üê Back to Menu</button>\r\n\r\n<canvas id=\"canvas\" width=\"544\" height=\"544\"></canvas>\r\n\r\n<div id=\"timer\">Time: 0</div>\r\n<div id=\"score\">Score: 0</div>\r\n\r\n<img src=\"sprites/julian.png\" id=\"julian\" alt=\"ImageNotFound\" style=\"display:none;\">\r\n<img src=\"sprites/playerSpriteRight.png\" id=\"playerSpriteRight\" alt=\"ImageNotFound\" style=\"display:none;\">\r\n<img src=\"sprites/playerSpriteLeft.png\" id=\"playerSpriteLeft\" alt=\"ImageNotFound\" style=\"display:none;\">\r\n<img src=\"sprites/bulletRight.png\" id=\"bulletRight\" alt=\"ImageNotFound\" style=\"display:none;\">\r\n<img src=\"sprites/bulletUp.png\" id=\"bulletUp\" alt=\"ImageNotFound\" style=\"display:none;\">\r\n<img src=\"sprites/bulletDown.png\" id=\"bulletDown\" alt=\"ImageNotFound\" style=\"display:none;\">\r\n<img src=\"sprites/bulletLeft.png\" id=\"bulletLeft\" alt=\"ImageNotFound\" style=\"display:none;\">\r\n<img src=\"sprites/gateUp.png\" id=\"gateUp\" alt=\"ImageNotFound\" style=\"display:none;\">\r\n<img src=\"sprites/gateDown.png\" id=\"gateDown\" alt=\"ImageNotFound\" style=\"display:none;\">\r\n<img src=\"sprites/gateLeft.png\" id=\"gateLeft\" alt=\"ImageNotFound\" style=\"display:none;\">\r\n<img src=\"sprites/gateRight.png\" id=\"gateRight\" alt=\"ImageNotFound\" style=\"display:none;\">\r\n<img src=\"sprites/monsterEnemyLeft.png\" id=\"monsterEnemyLeft\" alt=\"ImageNotFound\" style=\"display:none;\">\r\n<img src=\"sprites/monsterEnemyRight.png\" id=\"monsterEnemyRight\" alt=\"ImageNotFound\" style=\"display:none;\">\r\n\r\n<script>\r\n    function goToMenu() {\r\n        window.location.href = 'menu.html';\r\n    }\r\n</script>\r\n</body>\r\n</html>\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/game.html b/game.html
--- a/game.html	(revision bc989bf85949c75821298a3f3fbdcecf824626b8)
+++ b/game.html	(date 1740845390996)
@@ -25,6 +25,7 @@
             color: limegreen;
             padding: 10px 20px;
             font-size: 16px;
+            cursor: pointer;
         }
 
         .back-button:hover {
@@ -47,6 +48,42 @@
         #score {
             top: 50px;
         }
+
+        /* Game Over Popup */
+        #gameOverPopup {
+            display: none;
+            position: fixed;
+            top: 50%;
+            left: 50%;
+            transform: translate(-50%, -50%);
+            background: rgba(0, 0, 0, 0.9);
+            color: white;
+            padding: 30px;
+            border-radius: 10px;
+            text-align: center;
+            width: 300px;
+        }
+
+        #gameOverPopup h2 {
+            margin-bottom: 20px;
+        }
+
+        .popup-button {
+            background-color: limegreen;
+            color: black;
+            border: none;
+            padding: 10px 20px;
+            font-size: 18px;
+            margin: 10px;
+            cursor: pointer;
+            border-radius: 5px;
+        }
+
+        .popup-button:hover {
+            background-color: black;
+            color: limegreen;
+            border: 1px solid limegreen;
+        }
     </style>
     <script src="game-files/gameObject.js"></script>
     <script src="game-files/player.js"></script>
@@ -64,6 +101,12 @@
 <div id="timer">Time: 0</div>
 <div id="score">Score: 0</div>
 
+<div id="gameOverPopup">
+    <h2>Game Over</h2>
+    <button class="popup-button" onclick="restartGame()">Retry</button>
+    <button class="popup-button" onclick="goToMenu()">Back to Menu</button>
+</div>
+
 <img src="sprites/julian.png" id="julian" alt="ImageNotFound" style="display:none;">
 <img src="sprites/playerSpriteRight.png" id="playerSpriteRight" alt="ImageNotFound" style="display:none;">
 <img src="sprites/playerSpriteLeft.png" id="playerSpriteLeft" alt="ImageNotFound" style="display:none;">
Index: game-files/enemy.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>class Enemy extends GameObject {\r\n    constructor(x, y) {\r\n        super(x, y, 32, 32);\r\n        this.speed = 1;\r\n\r\n        monsterEnemyRight = document.getElementById(\"monsterEnemyRight\");\r\n        monsterEnemyLeft = document.getElementById(\"monsterEnemyLeft\");\r\n\r\n        this.activeSprite = monsterEnemyRight;\r\n    }\r\n\r\n    update(playerX, playerY, enemies) {\r\n        let distanceX = Math.abs(playerX - this.x);\r\n        let distanceY = Math.abs(playerY - this.y)\r\n\r\n        let scalingX = 1;\r\n        let scalingY = 1\r\n        if (distanceX > distanceY) scalingY = distanceY / distanceX;\r\n        if (distanceX < distanceY) scalingX = distanceX / distanceY;\r\n\r\n        let newX = this.x;\r\n        let newY = this.y;\r\n\r\n        if (this.x < playerX) newX += this.speed * scalingX;\r\n        if (this.x > playerX) newX -= this.speed * scalingX;\r\n\r\n        let thisEnemyX = { x: newX, y: this.y, height: this.height, width: this.width, id: this.id };\r\n\r\n        if (!this.checkForCollision(thisEnemyX, enemies)) {\r\n            this.x = newX;\r\n        }\r\n\r\n        if (this.y < playerY) newY += this.speed * scalingY;\r\n        if (this.y > playerY) newY -= this.speed * scalingY;\r\n\r\n        let thisEnemyY = { x: this.x, y: newY, height: this.height, width: this.width, id: this.id };\r\n\r\n        if (!this.checkForCollision(thisEnemyY, enemies)) {\r\n            this.y = newY;\r\n        }\r\n\r\n        if (this.x < playerX) this.activeSprite = monsterEnemyRight;\r\n        if (this.x > playerX) this.activeSprite = monsterEnemyLeft;\r\n\r\n    }\r\n\r\n    checkForCollision(bounds, enemies) {\r\n        for (let i = 0; i < enemies.length; i++) {\r\n            if (enemies[i].collidesWith(bounds)) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    drawObjectImage(ctx) {\r\n        super.drawObjectImage(ctx, this.activeSprite);\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/game-files/enemy.js b/game-files/enemy.js
--- a/game-files/enemy.js	(revision bc989bf85949c75821298a3f3fbdcecf824626b8)
+++ b/game-files/enemy.js	(date 1740844811802)
@@ -42,6 +42,11 @@
         if (this.x < playerX) this.activeSprite = monsterEnemyRight;
         if (this.x > playerX) this.activeSprite = monsterEnemyLeft;
 
+        let playerBounds = { x: playerX, y: playerY, height: this.height, width: this.width, id: -1 };
+        if (this.collidesWith(playerBounds)) {
+            alive = false;
+        }
+
     }
 
     checkForCollision(bounds, enemies) {
